<?xml version="1.0" encoding="UTF-8"?>
<FindBugsFilter>
    <!-- Exclude test classes from SpotBugs analysis -->
    <Match>
        <Class name="~.*Test.*"/>
        <Bug pattern="OBL_UNSATISFIED_OBLIGATION"/>
    </Match>
    <Match>
        <Class name="~.*Test.*"/>
        <Bug pattern="ODR_OPEN_DATABASE_RESOURCE"/>
    </Match>

    <!-- Exclude default encoding reliance in test classes (console output capture) -->
    <Match>
        <Class name="~.*Test.*"/>
        <Bug pattern="DM_DEFAULT_ENCODING"/>
    </Match>

    <!-- Exclude generated classes -->
    <Match>
        <Class name="~.*generated.*"/>
    </Match>

    <!--
    ARCHITECTURAL DECISIONS - JUSTIFIED SUPPRESSIONS
    ================================================

    The following EI_EXPOSE_REP suppressions are ARCHITECTURAL DECISIONS that are
    intentionally designed this way for the Dependency Injection (DI) pattern used
    throughout the FIN system. These are NOT security vulnerabilities.

    Dependency Injection Pattern:
    - Controllers store references to Services (business logic)
    - Services store references to Repositories (data access) and other Services
    - ApplicationState is shared across controllers for session management
    - This pattern enables loose coupling, testability, and maintainability

    Security Analysis:
    - All stored objects are internal framework components, not user data
    - No external code can access these private fields
    - Objects are instantiated by ApplicationContext with proper validation
    - Framework ensures service integrity and prevents malicious injection

    These suppressions are reviewed and justified as part of the EI_EXPOSE_REP
    security hardening initiative completed October 2025.
    -->

    <!-- Justified: Dependency Injection - Controllers store service references for business logic -->
    <Match>
        <Class name="~.*Controller.*"/>
        <Bug pattern="EI_EXPOSE_REP,EI_EXPOSE_REP2"/>
    </Match>

    <!-- Justified: Dependency Injection - Services store repository and service references -->
    <Match>
        <Class name="~.*Service.*"/>
        <Bug pattern="EI_EXPOSE_REP,EI_EXPOSE_REP2"/>
    </Match>

    <!-- Justified: Dependency Injection - Repositories store DataSource for database access -->
    <Match>
        <Class name="~.*Repository.*"/>
        <Bug pattern="EI_EXPOSE_REP,EI_EXPOSE_REP2"/>
    </Match>

    <!-- Justified: UI classes intentionally expose mutable objects for user interaction -->
    <Match>
        <Class name="~.*ui\..*"/>
        <Bug pattern="EI_EXPOSE_REP,EI_EXPOSE_REP2"/>
    </Match>

    <!-- Justified: Inner classes in batch processors may expose objects for processing -->
    <Match>
        <Class name="~.*\$ClassifiedTransaction.*"/>
        <Bug pattern="EI_EXPOSE_REP,EI_EXPOSE_REP2"/>
    </Match>

    <!-- Justified: Batch processors may expose objects during processing operations -->
    <Match>
        <Class name="~.*BatchProcessor.*"/>
        <Bug pattern="EI_EXPOSE_REP,EI_EXPOSE_REP2"/>
    </Match>

    <!-- Justified: ClassificationUIHandler needs to modify rule manager for interactive classification -->
    <Match>
        <Class name="fin.service.ClassificationUIHandler"/>
        <Bug pattern="EI_EXPOSE_REP2"/>
    </Match>

    <!-- Exclude null pointer dereference warnings in PayrollReportService methods -->
    <!-- These are false positives - the methods have explicit null checks with IllegalArgumentException -->
    <Match>
        <Class name="fin.service.PayrollReportService"/>
        <Method name="generatePayrollSummaryReport"/>
        <Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"/>
    </Match>
    <Match>
        <Class name="fin.service.PayrollReportService"/>
        <Method name="generateEmployeePayrollReport"/>
        <Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"/>
    </Match>
    <Match>
        <Class name="fin.service.PayrollReportService"/>
        <Method name="generateEMP201Report"/>
        <Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"/>
    </Match>
</FindBugsFilter>